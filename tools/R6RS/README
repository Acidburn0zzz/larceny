This directory contains R7RS implementations of some R6RS standard
libraries for use by R7RS libraries and programs.

Some of these implementations will be incomplete, but partial
implementations may be more useful than none at all.

****************************************************************

List of R6RS standard libraries and their current status:

(rnrs base)                     implemented with stub for identifier-syntax
(rnrs unicode)                  fully implemented atop (scheme char)
(rnrs bytevectors)              fully implemented atop (scheme base)
(rnrs lists)                    not yet implemented
(rnrs sorting)                  not yet implemented
(rnrs control)                  not yet implemented
(rnrs records syntactic)        will wait for R7RS (large)
(rnrs records procedural)       will wait for R7RS (large)
(rnrs records inspection)       will wait for R7RS (large)
(rnrs exceptions)               not yet implemented
(rnrs conditions)               won't be implemented
(rnrs io ports)                 not yet implemented
(rnrs io simple)                not yet implemented
(rnrs files)                    fully implemented atop (scheme file)
(rnrs programs)                 fully implemented atop (scheme process-context)
(rnrs arithmetic fixnums)       not yet implemented
(rnrs arithmetic flonums)       not yet implemented
(rnrs arithmetic bitwise)       not yet implemented
(rnrs syntax-case)              will wait for R7RS (large)
(rnrs hashtables)               not yet implemented
(rnrs enums)                    not yet implemented
(rnrs)                          not yet implemented
(rnrs eval)                     not yet implemented
(rnrs mutable-pairs)            fully implemented atop (scheme base)
(rnrs mutable-strings)          fully implemented atop (scheme base)
(rnrs r5rs)                     not yet implemented

****************************************************************

Implementation notes:

The *.sld files in the rnrs directory consist of wrappers that
import the corresponding *.sld files in the r6rs directory and
then re-export everything.  This extra level of indirection made
the libraries easier to test in systems that already provide
some or all of the R7RS standard libraries.

The r6rs/*.sld libraries can be tested using slightly modified
Racket tests found in Larceny's test/R7RS/Lib/tests/r6rs
directory.  See test/R7RS/Lib/README.

The r6rs/unicode-reference directory contains the R7RS reference
implementation of Unicode 7.0 with minimal changes from the R6RS
code.  This implementation is complete, for the benefit of R7RS
systems that don't provide (scheme char).  Most R7RS systems do
provide (scheme char); refactoring the reference implementation
to rely on (scheme char) would get rid of a lot of code and
tables.

