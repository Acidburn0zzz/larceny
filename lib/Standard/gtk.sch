(require 'std-ffi)
(require 'foreign-sugar)
(require 'glib) ;; convenience; who's going to use gtk without glib?

(let ((os (assq 'os-name (system-features))))
  (cond 
   ((equal? os '(os-name . "Linux"))
    (foreign-file "/usr/lib/libgtk-x11-2.0.so.0"))    
   ((equal? os '(os-name . "MacOS X"))
    (foreign-file "/sw/lib/libgtk-x11-2.0.dylib"))
   (else
    (error "Add case in gtk.sch for os: " os))))

(define-foreign (gtk-init boxed boxed) void)
(define-foreign (gtk-window-new int) void*)
(define-foreign (gtk-widget-show void*) void)
(define-foreign (gtk-main) void)
(define-foreign (gtk-main-quit) void)

(define-foreign (gtk-container-set-border-width void* int) void)
(define-foreign (gtk-button-new-with-label string) void*)
(define-foreign (gtk-container-add void* void*) void)
(define-foreign (gtk-window-set-title! void* string) void)
(define-foreign (gtk-hbox-new bool int) void*)
(define-foreign (gtk-vbox-new bool int) void*)
(define-foreign (gtk-label-new string) void*)
(define-foreign (gtk-hseparator-new) void*)
(define-foreign (gtk-box-pack-start void* void* bool bool int) void)
(define-foreign (gtk-box-pack-end   void* void* bool bool int) void)
(define-foreign (gtk-misc-set-alignment void* int int) void)
(define-foreign (gtk-widget-set-size-request void* int int) void)
(define-foreign (gtk-table-new int int bool) void*)
(define-foreign (gtk-table-attach-defaults void* void* int int int int)
  void)
(define-foreign (gtk-image-new-from-file string) void*)
(define-foreign (gtk-button-new) void*)
(define-foreign (gtk-radio-button-new-with-label (maybe void*) string) 
  void*)
(define-foreign (gtk-radio-button-new-with-label-from-widget 
                 void* string) 
  void*)
(define-foreign (gtk-radio-button-get-group void*) void*)
(define-foreign (gtk-toggle-button-set-active void* bool) void)
(define-foreign (gtk-toggle-button-get-active void*) bool)
(define-foreign (gtk-adjustment-new double double double double double double) void*)
(define-foreign (gtk-vscale-new void*) void*)
(define-foreign (gtk-hscale-new void*) void*)
(define-foreign (gtk-hscrollbar-new void*) void*)
(define-foreign (gtk-check-button-new-with-label string) void*)
(define-foreign (gtk-range-set-update-policy void* int) void)
(define-foreign (gtk-scale-set-digits void* int) void)
(define-foreign (gtk-scale-set-value-pos void* int) void)
(define-foreign (gtk-scale-set-draw-value void* bool) void)
(define-foreign (gtk-menu-item-new-with-label string) void*)
(define-foreign (gtk-menu-new) void*)
(define-foreign (gtk-option-menu-new) void*)
(define-foreign (gtk-menu-shell-append void* void*) void)
(define-foreign (gtk-option-menu-set-menu void* void*) void)
(define-foreign (gtk-frame-new string) void*)
(define-foreign (gtk-label-set-justify void* int) void)
(define-foreign (gtk-label-set-line-wrap void* bool) void)
(define-foreign (gtk-label-set-pattern void* string) void)
(define-foreign (gtk-widget-show-all void*) void)
(define-foreign (gtk-arrow-new int int) void*)

(define GTK-WINDOW-TOPLEVEL 0)

(define GTK-EXPAND 1)
(define GTK-SHRINK 2)
(define GTK-FILL   4)

(define GTK-UPDATE-CONTINUOUS 0)
(define GTK-UPDATE-DISCONTINUOUS 1)
(define GTK-UPDATE-DELAYED 0)

(define GTK-POS-LEFT 0)
(define GTK-POS-RIGHT 1)
(define GTK-POS-TOP 2)
(define GTK-POS-BOTTOM 3)

(define GTK-JUSTIFY-LEFT 0)
(define GTK-JUSTIFY-RIGHT 1)
(define GTK-JUSTIFY-CENTER 2)
(define GTK-JUSTIFY-FILL 3)

(define GTK-ARROW-UP 0)
(define GTK-ARROW-DOWN 1)
(define GTK-ARROW-LEFT 2)
(define GTK-ARROW-RIGHT 3)

(define GTK-SHADOW-NONE 0)
(define GTK-SHADOW-IN 1)
(define GTK-SHADOW-OUT 2)
(define GTK-SHADOW-ETCHED-IN 3)
(define GTK-SHADOW-ETCHED-OUT 4)
