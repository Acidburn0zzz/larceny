Several repositories seems like the best way to go:

larceny_src  -- source code, makefiles, scripts
larceny_doc  -- HTML documentation and release notes for each version
larceny_meta -- TODO, WISHLIST, Larceny notes, and similar, not necessarily 
                in sync with anything.

Root repository directory should be /proj/will/larceny_cvs (I can't
create this right now because I don't have permissions).  It should be
owned by will or lth and should be group-readable/writable for group
'larceny' (which doesn't yet exist).  Each of the above repositories
("modules") will be a subdirectory in the root repository.

-----------------

Structure:

   Auxlib/
   Asm/
       Common/
       MacScheme/
       Sparc/
       Sparc-old/
       Standard-C/
   Compat/               [this is new]
          Chez/          [this currently at top level]
          Larceny/       [this currently at top level]
   Compiler/
   Debugger/
   Experimental/
   Ffi/
   Lib/
       Common/
       Sunos/            [Both 4 and 5]
       Dec-unix/
       Mac/
       Windows/
   Rts/
       Build/            [auto-generated files]
       Common/           [now called Sys]
       Config/           [this is new -- config files go here]
       Sparc/
       Standard-C/
       Util/
   Testsuite/
             Lib/
             GC/
   Toplevel/             [this is new]
            Eval/        [this currently at top level]
            Repl/        [this currently at top level]
   Util/

-----------------

CVSROOT is currently /proj/will/lth/cvs-archives; needs to move up one
level eventually.

------------------

CVS Documentation

CVS documentation exists in two forms.

(1) A Unix manual page.  Type "man cvs" at the Unix prompt.  This is
    reference material.

(2) An EMACS Info file.  The CVS info file is not part of the standard
    info tree but must be loaded separately.  Type M-x info <RET> to
    start info mode, then 
	C-u C-h i /arch/gnu/packages/cvs-1.9/info/cvs.info <RET>
    to load the CVS info file.  This is the full manual and has a
    good tutorial.

There is also a book from O'Reilly, Applying RCS and SCCS, that might
be useful background.


------

cvs checkout tc
cvs commit -m "Added an optimization pass" backend.c
cvs release tc
cvs diff driver.c
cvs import -m "message" yoyodyne/RDIR yoyo start

A history file can be used to log history information; this is done
automatically if "cvs init" is used.



lcvs select larceny_src
lcvs checkout
lcvs claim Rts/Sys/memmgr.c -reason "To fix GC BUG #123"
lcvs update Rts/Sys/memmgr.c -use-claim-reason
