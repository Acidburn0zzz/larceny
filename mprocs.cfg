; -*- Scheme -*-
;
; Config file for millicode support procedure offsets into the global Scheme
; vector "millicode-support".
;
; $Id: milliprocs.cfg,v 1.4 1992/05/15 22:17:36 lth Exp $

(define-files #f "Build/mprocs.ah" #f)

(define-action assembly (lambda (x) (* x 4)))

(define-const scheme2scheme-helper 0 #f "MS_SCHEME2SCHEME" #f)
(define-const undefined-global     1 #f "MS_UNDEF_GLOBAL" #f) ; obsolete
(define-const generic-exception    2 #f "MS_EXCEPTION_HANDLER" #f)

(define-const bignum-add       10 #f "MS_BIGNUM_ADD" #f)
(define-const bignum-sub       11 #f "MS_BIGNUM_SUB" #f)
(define-const bignum-mul       12 #f "MS_BIGNUM_MUL" #f)
(define-const bignum-div       13 #f "MS_BIGNUM_DIV" #f)
(define-const bignum-negate    14 #f "MS_BIGNUM_NEGATE" #f)
(define-const bignum-abs       15 #f "MS_BIGNUM_ABS" #f)
(define-const bignum-equal     16 #f "MS_BIGNUM_EQUAL" #f)
(define-const bignum-less      17 #f "MS_BIGNUM_LESS" #f)
(define-const bignum-lesseq    18 #f "MS_BIGNUM_LESSEQ" #f)
(define-const bignum-greater   19 #f "MS_BIGNUM_GREATER" #f)
(define-const bignum-greatereq 20 #f "MS_BIGNUM_GREATEREQ" #f)

(define-const ratnum-add       30 #f "MS_RATNUM_ADD" #f)
(define-const ratnum-sub       31 #f "MS_RATNUM_SUB" #f)
(define-const ratnum-mul       32 #f "MS_RATNUM_MUL" #f)
(define-const ratnum-div       33 #f "MS_RATNUM_DIV" #f)
(define-const ratnum-negate    34 #f "MS_RATNUM_NEGATE" #f)
(define-const ratnum-abs       35 #f "MS_RATNUM_ABS" #f)
(define-const ratnum-equal     36 #f "MS_RATNUM_EQUAL" #f)
(define-const ratnum-less      37 #f "MS_RATNUM_LESS" #f)
(define-const ratnum-lesseq    38 #f "MS_RATNUM_LESSEQ" #f)
(define-const ratnum-greater   39 #f "MS_RATNUM_GREATER" #f)
(define-const ratnum-greatereq 40 #f "MS_RATNUM_GREATEREQ" #f)

(define-const rectnum-add      50 #f "MS_RECTNUM_ADD" #f)
(define-const rectnum-sub      51 #f "MS_RECTNUM_SUB" #f)
(define-const rectnum-mul      52 #f "MS_RECTNUM_MUL" #f)
(define-const rectnum-div      53 #f "MS_RECTNUM_DIV" #f)
(define-const rectnum-negate   54 #f "MS_RECTNUM_NEGATE" #f)
(define-const rectnum-equal    55 #f "MS_RECTNUM_EQUAL" #f)

(define-const generic-add       70 #f "MS_GENERIC_ADD" #f)
(define-const generic-sub       71 #f "MS_GENERIC_SUB" #f)
(define-const generic-mul       72 #f "MS_GENERIC_MUL" #f)
(define-const generic-div       73 #f "MS_GENERIC_DIV" #f)
(define-const fixnum2ratnum-div 74 #f "MS_FIXNUM2RATNUM_DIV" #f)
(define-const heavy-quotient    75 #f "MS_HEAVY_QUOTIENT" #f)
(define-const heavy-remainder   76 #f "MS_HEAVY_REMAINDER" #f)
(define-const heavy-modulo      77 #f "MS_HEAVY_MODULO" #f)
(define-const generic-equal     78 #f "MS_GENERIC_EQUAL" #f)
(define-const generic-less      79 #f "MS_GENERIC_LESS" #f)
(define-const generic-lesseq    80 #f "MS_GENERIC_LESSEQ" #f)
(define-const generic-greater   81 #f "MS_GENERIC_GREATER" #f)
(define-const generic-greatereq 82 #f "MS_GENERIC_GREATEREQ" #f)
(define-const contagion         83 #f "MS_CONTAGION" #f) 
(define-const pcontagion        84 #f "MS_PCONTAGION" #f)
(define-const econtagion        85 #f "MS_ECONTAGION" #f)

(define-const generic-make-rectangular 90 #f "MS_GENERIC_MAKE_RECTANGULAR" #f)
(define-const generic-inexact->exact   91 #f "MS_GENERIC_INEXACT2EXACT" #f)
(define-const generic-exact->inexact   92 #f "MS_GENERIC_EXACT2INEXACT" #f)

; eof
