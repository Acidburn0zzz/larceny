; Gabriel benchmarks
(define boyer-iters        200)
(define browse-iters       600)
(define cpstak-iters      5000)
(define ctak-iters         500)
(define dderiv-iters  10000000)
(define deriv-iters   10000000)
(define destruc-iters     2500)
(define diviter-iters 10000000)
(define divrec-iters   5000000)
(define puzzle-iters       500)
(define tak-iters        5000)
(define takl-iters        300)
(define trav1-iters       500)
(define trav2-iters       100)
(define triangl-iters      10)


; Kernighan and Van Wyk benchmarks
(define ack-iters          50)
(define array1-iters       10)
(define cat-iters          10)
(define string-iters       10)
(define sum1-iters         10)
(define sumloop-iters       5)
(define tail-iters         10)
(define wc-iters           50)

; C benchmarks
(define fft-iters       10000)
(define fib-iters          50)
(define fibfp-iters        50)
(define mbrot-iters       500)
(define nucleic-iters      50)
(define pnpoly-iters   500000)
(define sum-iters       50000)
(define sumfp-iters     10000)
(define tfib-iters         20)

; Other benchmarks
(define conform-iters     200)
(define dynamic-iters     250)
(define earley-iters     1000)
(define fibc-iters       2500)
(define graphs-iters     1500)
(define lattice-iters      10)
(define matrix-iters     2000)
(define maze-iters      20000)
(define mazefun-iters    5000)
(define nqueens-iters   10000)
(define paraffins-iters  5000)
(define peval-iters      1000)
(define pi-iters            2)
(define primes-iters   100000)
(define quicksort-iters    10)
(define ray-iters          10)
(define scheme-iters   100000)
(define simplex-iters  500000)
(define slatex-iters      100)
(define compiler-iters   1500)

(define fpsum-iters 100)
(define gcbench-iters 0) ; done elsewhere; don't want to muck w/ it here
(define nbody-iters   5)
(define nboyer-iters  500)
(define perm9-iters    50)
(define sboyer-iters  500)

; New benchmarks
(define parsing-iters    1000)
(define gcold-iters     10000)
(define reading-iters    1000)
