The top index for larceny
$Id: Index,v 1.3 1992/06/18 02:10:46 remy Exp remy $

This is the top-level directory for the larceny development environment.
It lists all dirctories in the tree, as well as the files in the root
directory.

Each directory contains a file called "Index" which lists all files in 
that directory which are part of the RCS tree.


--- Directories ---

Chez/
  Code needed to be able to use Chez Scheme.

Compiler/
  The code for the Scheme 313 assembler and compiler, and code used
  during the build process.

Lib/
  Contains the code for the runtime library.

Lib/Eval/
  The code for the read/eval/print loop and global environment.

Lib/Sparc/
  Sparc Machine-dependent code for the runtime library.
  
Sparc/
  Sparc dependent assembly code for larceny.  Millicode, generic
  arithemetic, etc.

Sys/
  Contains primarily C code used build the larceny executable.

Text/
  The directory containing the documentation on the system, composed
  primarily of the Larceny Notes.

Thesis/
  Man at Work - Do Not Disturb

There are also various directories named Obsolete which contain
files from their parent directory which have become obsolete.


--- Files ---

BUGLIST
  The official bug list (also the wish list).  This list really contains
  bugs that are known of but haven't been fixed for various reasons. 
  Also contains suggested improvements.

Directories
  A list of directories in the larceny development environment.  Used
  by checkin, checkout, make-larceny-tree, and possibly other utils.

Index
  This file.

Makefile
  The Makefile for the larceny executable.  Invoke by saying "make", 
  "make larceny".  See inside for other flavors.

build
  A script that starts up the development environment.  

checkin
  A script that will do an RCS check in of all files that you currently
  have checked out and locked.  

checkout
  A script that will do an RCS check out of all files that are more
  recent than the version you have.  May have some problems do to
  an update of RCS.

config
  A script that runs each of the .cfg files through Chez.  
  It's called from the Makefile while building larceny.

exceptions.cfg
  Defines general exception codes and primop-specific exception codes.

larceny.1
  The larceny manual page.  

layouts.cfg
  Defines data structure layouts, tags, and other bit-level things.

make-larceny-tree
  A script that will build the proper directories for the larceny
  development environment, and add in the RCS links.  It can be
  used to add new directories and links to currently existing 
  directories.

memstats.cfg
  Defines memory statistic constants.

millicode.cfg
  Defines millicode table offsets.

milliprocs.cfg
  Defines millicode support procedure offsets into the global
  vector "millicode-support".

offsets.cfg
  Defines offsets into the globals table.

registers.cfg
  Defines register aliases.

rewrite
  A script that loads Lars' rewrite program and then rewrites the 
  scheme file specfied on the command line as file.rew.

translate
  Runs Compiler/translate.sch.  What does that do?
