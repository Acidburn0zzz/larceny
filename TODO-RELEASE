$Id$

SPARC Larceny version 1.0a2, tentative release date 1 June 1999.

-------------------------------

Major features at a glance:

  * Twobit pass 3
  * Foreign function interface
  * Performance bug fixes (named LET, CASE)
  * Correctness bug fixes (sundry)

-------------------------------

Remaining to-do items:

[General bug fixes]
  * All `high' priority bugs in BUGS.
  * The following `medium' priority BUGS:
     (list to be determined)

[Twobit]
  * Pass 3.
  * Macro expander performance.
  * SRFI-0, if finalized early enough (unlikely).

[Run-time system]
  * Must deal with more signals on Unix systems.  See TODO for details.

[Library]
  * Top-level environments must hold syntax definitions, and the hacks
    used to work around it (in compile-expression, macro-expand-expression)
    must be removed.

[SPARC Assembler]
  * Performance: get rid of branch target association list and replace
    it by a bit vector.  See TODO for details.

[Debugging]
  See TODO for details.  The following are important for 1.0a2:
  * Document the debugger
  * Trace/break procedures rather than names.
  * Print variable names where convenient.
  * Reasonable support for debugging interpreted code.

[Build process]
  * Note that configuration process has changed because Rts/Sys/config.h
    has been cleaned up.  This must be cleaned up further, tested, and
    documented.  See TODO for details.  The goal here is:
    - reasonable configuration complexity for Petit Larceny
    - reasonable configuration complexity for SPARC Larceny
    - predictability
    - portability of the configuration process to non-unix platforms
    - portability of Petit Larceny to non-unix platforms

[Documentation]
  * Describe new compiler switches
  * Describe new configuration mechanism
  * Go thru toplevel.sch and make sure every non-R4RS procedure is
    documented in the User's Manual.  In particular:
    - Hash table interface.
    - Reset-output-string
    - ...
  * Describe any other changes
  * Fix reported documentation bugs (to be determined)

[General clean-up]
  * SPARC larceny does not currently compile with LCC because LCC
    picks up LCC header files rather than system header files.  
    Larceny requires the system header files for the native system
    (for proprietary signal handling extensions).  It is no doubt
    possible to tell LCC about the system header files, although 
    they may not conform to ANSI C.
  * Need to rename some files (this will happen as part of renaming for
    the sake of Petit Larceny):
     Util/std-heap.sch    ->   Util/larceny-heap.sch
     Util/init-comp.sch   ->   Util/larceny-heap-init.sch
     Eval                 ->   Interpreter
     Eval/eval.sch        ->   Interpreter/interp.sch
     Eval/evalprim.sch    ->   Interpreter/interp-prim.sch
  * From Will:
     >Compiler/pass2.aux.sch and Lib/procinfo.sch both contain magic
     >constants, accessors, and setters for the documentation slot.
     >This information should exist in only one place, and it has to
     >be part of the development environment.

[Standard builds]
  * [discussion item]
    Rename `r5rs.heap' as `interpreter.heap' (since it's more than R5RS).
    Consider making a `r5rs.heap' that contains only r5rs procedures.
  * The debugger needs to be part of interpreter.heap.
  * Should create scripts that setup correct compiler switches before
    compiling all files for standard heaps; automate the entire process
    of building the heaps.  Eg., Scripts/build-larceny-heap.

----------------------------------------------------------------------

Projects finished

[FFI]


----------------------------------------------------------------------

Release process checklist etc

Bug to watch out for: The binary archives have a symbolic link to the
binary, rather than the binary, due to the directory structure's use of
links.

Observe that the Standard-FFI is _not_ portable between operating
systems, not even between SunOS 4 and SunOS 5.  The reason is different
name mangling (prepended underscore on SunOS 4, none on SunOS 5).  Thus
larceny.heap must be built for each system.  Annoying but it's the way
it is for now (see TODO for more info).

[Release]
  * Source freeze (in this order):                                
    - Branch source tree as branch-1-0-a1                         
      cvs rtag -b branch-1-0-a1 larceny_src                       
      cvs rtag -b branch-1-0-a1 larceny_doc                       
  * Source archive                                                
    - move version number on branch to 1.0a1                      
    - iterate until it works:
      - cvs export on branch-1-0-a1                               
      - run Scripts/release-1.0a1                                 
        *** It was necessary to fix the script to
            use rm -rf rather than rm -f on directories.
      - run ( cd Rts; BUILD_HOST=chez make config )               
        *** It was necessary to run `make setup' first to
            create directories, setup links, edit `build'.
            Then it was necessary to remove .o files in 
            Compat/Chez.
      - make source archive  larceny-1.0a1-src.tar.gz             
        *** It was necessary to manually remove RELEASE-NOTES,
            which doesn't go in the archive (wasn't finished,
            either).
      - install, rebuild, run some simple tests.                  
        *** `make setup' gives harmless error messages because
            the cfg files are already in the Build directory
            when linking happens; we should check before linking.
  * Doc archive                                                   
    - create archive
  * Archives:
    - Get binary distributions from the source archive builds     
    - Archive names and contents
      larceny-1.0a1-src.tar.gz                                    
        pruned src tree
      larceny-1.0a1-sunos4-bin.tar.gz                             
        binary, heaps, Scripts/*, COPYRIGHT
      larceny-1.0a1-sunos5-bin.tar.gz                             
        binary, heaps, Scripts/*, COPYRIGHT
      larceny-1.0a-doc.tar.gz                                     
        (pruned?) doc tree
  * Finish release notes (do not go in ARCHIVE).                  
  * Put release date on download page.                            
  * Add archive sizes on download page.                           
  * Move archives and files to FTP directory
  * Test that FTP works the way it's supposed to.
  * Install documentation somewhere useful; put a permanent 
    link to it on the home page.
  * Backup archives onto MO-disk.                                 
  * Install Larceny in /proj/will/Apps/larceny!                   

