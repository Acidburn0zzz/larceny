; -*- Scheme -*-
;
; Larceny runtime.
; Offsets into the "globals" table.
;
; $Id: offsets.cfg,v 1.5 1992/05/15 22:17:38 lth Exp lth $
;
; The roots must be contiguous and between FIRST_ROOT and LAST_ROOT,
; inclusive.
;
; Entries marked **OBS** or OBS are obsolete.

(define-files "Sys/offsets.h" "Sparc/offsets.s.h" "Sparc/offsets.sch.h")

(define-const heap-version "8" "HEAP_VERSION" #f #f)

(define-action assembly (lambda (x) (* x 4)))

; This is redefined later! Change the definition after the register defs
; if you change this!

(define-action scheme   (lambda (x) (* x 4)))

; Be careful with these!

(define-const first-root  20 "FIRST_ROOT"  #f #f)
(define-const last-root   67 "LAST_ROOT"   #f #f)
(define-const last-global 92 "LAST_GLOBAL" #f #f)

; Table size

(define-const globals-table-size (+ last-global 1) "GLOBALS_TABLE_SIZE" #f #f)

; Nonroots

(define-const t-base-offset         0 "T_BASE_OFFSET" "T_BASE_OFFSET" #f)
(define-const t-top-offset          1 "T_TOP_OFFSET" "T_TOP_OFFSET" #f)
(define-const t-trans-offset        2 "T_TRANS_OFFSET" "T_TRANS_OFFSET" #f)
(define-const t-max-offset          3 "T_MAX_OFFSET" "T_MAX_OFFSET" #f)
(define-const e-base-offset         4 "E_BASE_OFFSET" "E_BASE_OFFSET" #f)
(define-const e-top-offset          5 "E_TOP_OFFSET" "E_TOP_OFFSET" #f)
(define-const e-mark-offset         6 "E_MARK_OFFSET" "E_MARK_OFFSET" #f)
(define-const e-limit-offset        7 "E_LIMIT_OFFSET" "E_LIMIT_OFFSET" #f)
(define-const e-max-offset          8 "E_MAX_OFFSET" "E_MAX_OFFSET" #f)
(define-const s-base-offset         9 "S_BASE_OFFSET" "S_BASE_OFFSET" #f)
(define-const s-max-offset         10 "S_MAX_OFFSET" "S_MAX_OFFSET" #f)
(define-const stk-base-offset      11 "STK_BASE_OFFSET" "STK_BASE_OFFSET" #f)
(define-const stk-limit-offset     12 
              "STK_LIMIT_OFFSET" "STK_LIMIT_OFFSET" "$g.stk-limit")
(define-const stk-start-offset     13 
              "STK_START_OFFSET" "STK_START_OFFSET" "$g.stk-start")
(define-const stk-max-offset       14 "STK_MAX_OFFSET" "STK_MAX_OFFSET" #f)
; (define-const e-collections-offset 15
;               "E_COLLECTIONS_OFFSET" "E_COLLECTIONS_OFFSET" #f) ;**OBS**
; (define-const t-collections-offset 16
;               "T_COLLECTIONS_OFFSET" "T_COLLECTIONS_OFFSET" #f) ;**OBS**
; (define-const wcollected-offset    17
;               "WCOLLECTED_OFFSET" "WCOLLECTED_OFFSET" #f) ;**OBS**
; (define-const wallocated-offset    18
;               "WALLOCATED_OFFSET" "WALLOCATED_OFFSET" #f) ;**OBS**
(define-const initial-timer-offset 19
              "INITIAL_TIMER_OFFSET" "INITIAL_TIMER_OFFSET" #f)

; **** START OF ROOTS
; Roots for virtual registers

(define-const reg0-offset 20 "REG0_OFFSET" "REG0_OFFSET" "$g.reg0")
(define-const reg1-offset 21 "REG1_OFFSET" "REG1_OFFSET" #f)
(define-const reg2-offset 22 "REG2_OFFSET" "REG2_OFFSET" #f)
(define-const reg3-offset 23 "REG3_OFFSET" "REG3_OFFSET" #f)
(define-const reg4-offset 24 "REG4_OFFSET" "REG4_OFFSET" #f)
(define-const reg5-offset 25 "REG5_OFFSET" "REG5_OFFSET" #f)
(define-const reg6-offset 26 "REG6_OFFSET" "REG6_OFFSET" #f)
(define-const reg7-offset 27 "REG7_OFFSET" "REG7_OFFSET" #f)

(define-action scheme (lambda (x) (* (- x reg0-offset) 4)))

(define-const reg8-offset 28 "REG8_OFFSET" "REG8_OFFSET" "$r.reg8")
(define-const reg9-offset 29 "REG9_OFFSET" "REG9_OFFSET" "$r.reg9")
(define-const reg10-offset 30 "REG10_OFFSET" "REG10_OFFSET" "$r.reg10")
(define-const reg11-offset 31 "REG11_OFFSET" "REG11_OFFSET" "$r.reg11")
(define-const reg12-offset 32 "REG12_OFFSET" "REG12_OFFSET" "$r.reg12")
(define-const reg13-offset 33 "REG13_OFFSET" "REG13_OFFSET" "$r.reg13")
(define-const reg14-offset 34 "REG14_OFFSET" "REG14_OFFSET" "$r.reg14")
(define-const reg15-offset 35 "REG15_OFFSET" "REG15_OFFSET" "$r.reg15")
(define-const reg16-offset 36 "REG16_OFFSET" "REG16_OFFSET" "$r.reg16")
(define-const reg17-offset 37 "REG17_OFFSET" "REG17_OFFSET" "$r.reg17")
(define-const reg18-offset 38 "REG18_OFFSET" "REG18_OFFSET" "$r.reg18")
(define-const reg19-offset 39 "REG19_OFFSET" "REG19_OFFSET" "$r.reg19")
(define-const reg20-offset 40 "REG20_OFFSET" "REG20_OFFSET" "$r.reg20")
(define-const reg21-offset 41 "REG21_OFFSET" "REG21_OFFSET" "$r.reg21")
(define-const reg22-offset 42 "REG22_OFFSET" "REG22_OFFSET" "$r.reg22")
(define-const reg23-offset 43 "REG23_OFFSET" "REG23_OFFSET" "$r.reg23")
(define-const reg24-offset 44 "REG24_OFFSET" "REG24_OFFSET" "$r.reg24")
(define-const reg25-offset 45 "REG25_OFFSET" "REG25_OFFSET" "$r.reg25")
(define-const reg26-offset 46 "REG26_OFFSET" "REG26_OFFSET" "$r.reg26")
(define-const reg27-offset 47 "REG27_OFFSET" "REG27_OFFSET" "$r.reg27")
(define-const reg28-offset 48 "REG28_OFFSET" "REG28_OFFSET" "$r.reg28")
(define-const reg29-offset 49 "REG29_OFFSET" "REG29_OFFSET" "$r.reg29")
(define-const reg30-offset 50 "REG30_OFFSET" "REG30_OFFSET" "$r.reg30")
(define-const reg31-offset 51 "REG31_OFFSET" "REG31_OFFSET" "$r.reg31")

; This is defined above as well; watch it!

(define-action scheme   (lambda (x) (* x 4)))

(define-const argreg2-offset 52 "ARGREG2_OFFSET" "ARGREG2_OFFSET" #f)
(define-const argreg3-offset 53 "ARGREG3_OFFSET" "ARGREG3_OFFSET" #f)
(define-const result-offset 54 "RESULT_OFFSET" "RESULT_OFFSET" #f)

; System roots / magic globals

(define-const continuation-offset 55
              "CONTINUATION_OFFSET" "CONTINUATION_OFFSET" #f)
(define-const scheme-entry-offset 56
              "SCHEME_ENTRY_OFFSET" "SCHEME_ENTRY_OFFSET" #f)
(define-const millicode-support-offset 57
              "MILLICODE_SUPPORT_OFFSET" "MILLICODE_SUPPORT_OFFSET" #f)

; Roots which are millicode temporaries

(define-const saved-result-offset 58
              "SAVED_RESULT_OFFSET" "SAVED_RESULT_OFFSET" #f)
(define-const glue-tmp1-offset 59 "GLUE_TMP1_OFFSET" "GLUE_TMP1_OFFSET" #f)
(define-const glue-tmp2-offset 60 "GLUE_TMP2_OFFSET" "GLUE_TMP2_OFFSET" #f)
(define-const glue-tmp3-offset 61 "GLUE_TMP3_OFFSET" "GLUE_TMP3_OFFSET" #f)
(define-const glue-tmp4-offset 62 "GLUE_TMP4_OFFSET" "GLUE_TMP4_OFFSET" #f)
(define-const gen-tmp1-offset  63 "GEN_TMP1_OFFSET" "GEN_TMP1_OFFSET" #f)
(define-const gen-tmp2-offset  64 "GEN_TMP2_OFFSET" "GEN_TMP2_OFFSET" #f)
(define-const mem-tmp1-offset  65 "MEM_TMP1_OFFSET" "MEM_TMP1_OFFSET" #f)
(define-const mem-tmp2-offset  66 "MEM_TMP2_OFFSET" "MEM_TMP2_OFFSET" #f)

; Magic global again

(define-const memstats-vector  67 "MEMSTATS_VECTOR_OFFSET" "MEMSTATS_VECTOR_OFFSET" #f)

; **** END OF ROOTS

; More nonroots

; (define-const lomem-offset 70 "LOMEM_OFFSET" "LOMEM_OFFSET" #f)  ; **OBS**
; (define-const himem-offset 71 "HIMEM_OFFSET" "HIMEM_OFFSET" #f)  ; **OBS**
(define-const sp-offset 72 "SP_OFFSET" "SP_OFFSET" #f)
(define-const timer-offset 73 "TIMER_OFFSET" "TIMER_OFFSET" #f)
(define-const e-new-base-offset 74 "E_NEW_BASE_OFFSET" "E_NEW_BASE_OFFSET" #f)
(define-const e-new-max-offset 75 "E_NEW_MAX_OFFSET" "E_NEW_MAX_OFFSET" #f)
(define-const t-new-base-offset 76 "T_NEW_BASE_OFFSET" "T_NEW_BASE_OFFSET" #f)
(define-const t-new-max-offset 77 "T_NEW_MAX_OFFSET" "T_NEW_MAX_OFFSET" #f)
; (define-const must-tenure-offset 78 
;               "MUST_TENURE_OFFSET" "MUST_TENURE_OFFSET" #f) ; **OBS**
; (define-const f-collections-offset 79 
;               "F_COLLECTIONS_OFFSET" "F_COLLECTIONS_OFFSET" #f)  ; **OBS**
; (define-const wcopied-offset 80 "WCOPIED_OFFSET" "WCOPIED_OFFSET" #f) ;OBS**
; (define-const saved-f2-offset 81 "SAVED_F2_OFFSET" "SAVED_F2_OFFSET" #f) ;OBS
; (define-const saved-f3-offset 82 "SAVED_F3_OFFSET" "SAVED_F3_OFFSET" #f) ;OBS
; (define-const saved-f4-offset 83 "SAVED_F4_OFFSET" "SAVED_F4_OFFSET" #f) ;OBS
; (define-const saved-f5-offset 84 "SAVED_F5_OFFSET" "SAVED_F5_OFFSET" #f) ;OBS
(define-const saved-retaddr-offset 85 
              "SAVED_RETADDR_OFFSET" "SAVED_RETADDR_OFFSET" #f)
(define-const arith-saved-retaddr-offset 86 
              "ARITH_SAVED_RETADDR_OFFSET" "ARITH_SAVED_RETADDR_OFFSET" #f)
(define-const singlestep 87 "SINGLESTEP_OFFSET" "SINGLESTEP_OFFSET" #f)
(define-const gen-nrtmp1 88 "GEN_NRTMP1_OFFSET" "GEN_NRTMP1_OFFSET" #f)
(define-const gen-nrtmp2 89 "GEN_NRTMP2_OFFSET" "GEN_NRTMP2_OFFSET" #f)
(define-const gen-nrtmp3 90 "GEN_NRTMP3_OFFSET" "GEN_NRTMP3_OFFSET" #f)
(define-const debuglevel 91 "DEBUGLEVEL_OFFSET" "DEBUGLEVEL_OFFSET" #f)
(define-const breakpoint 92 "BREAKP_OFFSET" #f #f)

; eof
