Hash tables and hash functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Hash tables are key/value mapping structures that provide expected
constant time lookup.

==== Hash tables

_Procedure make-hashtable_

++ (make-hashtable _hash-function bucket-searcher size_) => _hashtable_++

Returns a newly allocated mutable hash table using _hash-function_ as
the hash function and _bucket-searcher_, e.g. ASSQ, ASSV, ASSOC, to
search a bucket with _size_ buckets at first, expanding the number of
buckets as needed. The _hash-function_ must accept a key and return a
non-negative exact integer.

++ (make-hashtable _hash-function bucket-searcher_) => _hashtable_++

Equivalent to (make-hashtable _hash-function bucket-searcher n_) for
some value of _n_ chosen by the implementation.

++ (make-hashtable _hash-function_) => _hashtable_++

Equivalent to (make-hashtable _hash-function_ assv).

++ (make-hashtable) => _hashtable_++

Equivalent to (make-hashtable object-hash assv).

_Procedure hashtable-contains_

++ (hashtable-contains? _hashtable key_) => _bool_++

Returns true iff the _hashtable_ contains an entry for _key_.

_Procedure hashtable-fetch_

++ (hashtable-fetch _hashtable key flag_) => _object_++

Returns the value associated with _key_ in the _hashtable_ if the
_hashtable_ contains _key_; otherwise returns _flag_.

_Procedure hashtable-get_

++ (hashtable-get _hashtable key_) => _object_++

Equivalent to (hashtable-fetch  #f).

_Procedure hashtable-put!_

++ (hashtable-put! _hashtable key value_) => _unspecified_++

Changes the _hashtable_ to associate _key_ with _value_, replacing any
existing association for _key_.

_Procedure hashtable-remove!_

++ (hashtable-remove! _hashtable key_) => _unspecified_++

Removes any association for _key_ within the _hashtable_. 

_Procedure hashtable-clear!_

++ (hashtable-clear! _hashtable_) => _unspecified_++

Removes all associations from the _hashtable_.

_Procedure hashtable-size_

++ (hashtable-size _hashtable_) => _integer_++

Returns the number of keys contained within the _hashtable_.

_Procedure hashtable-for-each_

++ (hashtable-for-each _procedure hashtable_) => _unspecified_++

The _procedure_ must accept two arguments, a key and the value
associated with that key. Calls the _procedure_ once for each
key-value association in _hashtable_. The order of these calls is
indeterminate.

_Procedure hashtable-map_

++ (hashtable-map _procedure hashtable_) => _unspecified_++

The _procedure_ must accept two arguments, a key and the value
associated with that key. Calls the _procedure_ once for each
key-value association in _hashtable_, and returns a list of the
results. The order of the calls is indeterminate.

_Procedure hashtable-copy_


++ (hashtable-copy _hashtable_) => _hashtable_++
    

Returns a copy of the _hashtable_.

==== Hash functions

The _hash values_ returned by these functions are nonnegative exact
integer suitable as hash values for the hashtable functions.

_Procedure equal-hash_


++ (equal-hash _object_) => _integer_++

    

Returns a hash value for _object_ based on its contents.

_Procedure object-hash_


++ (object-hash _object_) => _integer_++

    

Returns a hash value for _object_ based on its identity.

proc:string-hash[args="string",result="fixnum"]

Returns a hash value for _string_ based on its content.

proc:symbol-hash[args="symbol",result="fixnum"]

Returns a hash value for _symbol_ based on its print name. Symbol-hash
is very fast, because the hash code is cached in the symbol data
structure.
