#!/bin/sh
#
# ./nbuild
# nbuild -- development system load script
#
# $Id: nbuild,v 1.3 1997/02/11 21:48:03 lth Exp $
#
# The advantage of having this script is that it can be cloned and 
# specialized for different object (or source) directories.

# Temporary command file
TMPFILE=/tmp/larceny.build.`whoami`.$$

# Working directory
DIR=`pwd`

# New assembler or not?
NEW_ASM="#f"

# Default host system for building is Chez Scheme.
L_HOST=Chez
L_HOSTNAME="Chez Scheme"

ARGS=""

while [ "$1" != "" ]; do 
  case $1 in
    -larceny | -l)
       L_HOST=Larceny; L_HOSTNAME="Larceny" 
       ;;
    -chez | -c)
       L_HOST=Chez; L_HOSTNAME="Chez Scheme" 
       ;;
    -new | -n)
       NEW_ASM="#t" 
       ;;
    -a)
       shift
       ARGS=$*
       break
       ;;
    *) echo "Unknown host system: $1"
       echo "Usage: $0 [ -larceny | -l | -chez | -c | -new | -n ] [-a args]"
       exit 1
       ;;
  esac
  shift
done

cat > $TMPFILE <<END
(define new-assembler? $NEW_ASM)
(define host-system-name "$L_HOSTNAME")
(define host-system '$L_HOST)
(define hostdir "$DIR/$L_HOST/")
(define topleveldir "$DIR/")
(define sourcedir "$DIR/Lib/")
(define targetdir "$DIR/Lib/")
(define configdir "$DIR/")
(define compilerdir "$DIR/Compiler/")
(define sparc-olddir "$DIR/Asm/Sparc-old/")
(define common-asmdir "$DIR/Asm/Common/")
(define sparc-asmdir "$DIR/Asm/Sparc/")
(define utildir "$DIR/Util/")
(define builddir "$DIR/Build/")
(define evaldir "$DIR/Eval/")
(define repldir "$DIR/Repl/")
(display "Twobit/Larceny development environment running under ")
(display host-system-name)
(display ".")
(newline)
(newline)
(display "Loading $L_HOSTNAME compatibility package.") (newline)
(load (string-append hostdir "compat.sch"))
(display "Loading build file.") (newline)
(load (string-append utildir "nbuild.sch"))
END

# Make the scheme header file; it may have changed.

( cd Rts; make Build/schdefs.h ; exit $? ) || exit $?

# Run the development environment.

case $L_HOST in
  Chez)    scheme $ARGS $TMPFILE ;;
  Larceny) larceny $ARGS -args $TMPFILE ;;
  *)       echo "Internal error in build script."; exit 1 ;;
esac

rm $TMPFILE
exit 0

# eof
