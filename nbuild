#!/bin/sh
# nbuild -- development system load script
#
# $Id: nbuild,v 1.5 1997/09/17 15:24:39 lth Exp lth $
#
# Usage:
#   nbuild [ nbuild options ] [ -a host system argument ... ]
#
# The advantage of having this script is that it can be cloned and 
# specialized for different object (or source) directories.

# Temporary command file
TMPFILE=/tmp/larceny.build.`whoami`.$$

# Working directory
DIR=`pwd`

# New assembler or not?
NEW_ASM="#t"

# Target (choices: "SPARC", "standard-C")
TARGET="SPARC"

# Default host system for building is Chez Scheme.
L_HOST=chez
L_HOSTDIR=Chez
L_HOSTNAME="Chez Scheme"

ARGS=""
INTERP="#f"
VERBOSE="#f"
EXECUTABLE=""

while [ "$1" != "" ]; do 
  case $1 in
    -a | -arguments)
       shift
       ARGS=$*
       break
       ;;
    -chez | -c)
       L_HOST=chez
       L_HOSTDIR=Chez
       L_HOSTNAME="Chez Scheme" 
       ;;
    -e | -executable)
       shift
       EXECUTABLE=$1
       ;;
    -i | -interpreted)
       INTERP="#t"
       ;;
    -larceny | -l)
       L_HOST=larceny
       L_HOSTDIR=Larceny
       L_HOSTNAME="Larceny" 
       NEW_ASM="#t"
       ;;
    -Larceny | -L)
       L_HOST=Larceny
       L_HOSTDIR=Larceny
       L_HOSTNAME="Larceny" 
       ;;
    -old | -o)
       NEW_ASM="#f"
       ;;
    -new | -n)
       ;;
    -sparc)
       TARGET="SPARC"
       ;;
    -standard-C)
       TARGET="standard-C"
       ;;
    -v | -verbose)
       VERBOSE="#t"
       ;;
    *) echo "Unknown host system: $1"
       echo "Usage: $0 [ -c | -i | -l | -o | -n | -v ] [ -a args ]"
       echo "See also http://www.ccs.neu.edu/home/lth/larceny/developing.html"
       exit 1
       ;;
  esac
  shift
done

cat > $TMPFILE <<END
(define *always-load-scheme-code* $INTERP)
(define *verbose-load* $VERBOSE)
(define new-assembler? $NEW_ASM)
(define host-system-name "$L_HOSTNAME")
(define host-system '$L_HOST)
(define hostdir "$DIR/$L_HOSTDIR/")
(define topleveldir "$DIR/")
(define utildir "$DIR/Util/")
(define sourcedir "$DIR/Lib/")
(define targetdir "$DIR/Lib/")
(define configdir "$DIR/")
(define compilerdir "$DIR/Compiler/")
(define sparc-olddir "$DIR/Asm/Sparc-old/")
(define common-asmdir "$DIR/Asm/Common/")
(define sparc-asmdir "$DIR/Asm/Sparc/")
(define standard-C-asmdir "$DIR/Asm/C/")
(define utildir "$DIR/Util/")
(define builddir "$DIR/Build/")
(define evaldir "$DIR/Eval/")
(define repldir "$DIR/Repl/")
(define nbuild:target-machine '$TARGET)
(display "Twobit/Larceny development environment running under ")
(display host-system-name)
(display ".")
(newline)
(newline)
(display "Loading $L_HOSTNAME compatibility package.") (newline)
(load (string-append hostdir "compat.sch"))
(display "Loading build file.") (newline)
(load (string-append utildir "nbuild.sch"))
END

# Make the scheme header file; it may have changed.

( cd Rts; make Build/schdefs.h ; exit $? ) || exit $?

# Run the development environment.

if [ "$EXECUTABLE" = "" ]; then
  case $L_HOST in
    chez) EXECUTABLE="scheme" ;;
    larceny) EXECUTABLE="larceny" ;;
    Larceny) EXECUTABLE="Larceny" ;;
  esac
fi

case $L_HOST in
  chez)    $EXECUTABLE $ARGS $TMPFILE ;;
  larceny) $EXECUTABLE $ARGS -args $TMPFILE ;;
  Larceny) $EXECUTABLE $ARGS -args $TMPFILE ;;
  *)       echo "Internal error in build script."; exit 1 ;;
esac

rm $TMPFILE
exit 0

# eof
