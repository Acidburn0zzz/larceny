#!/bin/sh
#
# Copyright 1998 Lars T Hansen.
#
# $Id$
#
# Development system load script
#
# Usage:
#   nbuild [ nbuild options ] [ -a host system argument ... ]

# Temporary command file
TMPFILE=/tmp/larceny.build.`whoami`.$$

# Working directory
DIR=`pwd`

# Target (choices: "sparc", "standard-C")
TARGET="sparc"

# Use Larceny to build
#L_HOST=larceny
#L_HOSTDIR=Larceny
#L_HOSTNAME="Larceny"

# Use Chez Scheme to build
L_HOST=chez
L_HOSTDIR=Chez
L_HOSTNAME="Chez Scheme"

ARGS=""
INTERP="#f"
VERBOSE="#f"
EXECUTABLE=""
ENDIAN=big

while [ "$1" != "" ]; do 
  case $1 in
    -a | -arguments)
       shift
       ARGS=$*
       break
       ;;
    -be | -big)
       TARGET="standard-C"
       ENDIAN=big
       ;;
    -chez | -c)
       L_HOST=chez
       L_HOSTDIR=Chez
       L_HOSTNAME="Chez Scheme" 
       ;;
    -e | -executable)
       shift
       EXECUTABLE=$1
       ;;
    -el | -little)
       TARGET="standard-C"
       ENDIAN=little
       ;;
    -i | -interpreted)
       INTERP="#t"
       ;;
    -larceny | -l)
       L_HOST=larceny
       L_HOSTDIR=Larceny
       L_HOSTNAME="Larceny" 
       ;;
    -Larceny | -L)
       L_HOST=Larceny
       L_HOSTDIR=Larceny
       L_HOSTNAME="Larceny" 
       ;;
    -sparc)
       TARGET="sparc"
       ;;
    -standard-C | -petit)
       TARGET="standard-C"
       ;;
    -v | -verbose)
       VERBOSE="#t"
       ;;
    *) echo "Illegal argument: $1"
       echo "Usage: $0 [ options ] [ -a arguments ]"
       echo ""
       echo "Options are:"
       echo "  -big               big endian (Standard-C target)"
       echo "  -chez              use Chez Scheme"
       echo "  -interpreted       use interpreter (do not load compiled files)"
       echo "  -larceny           use larceny"
       echo "  -Larceny           use Larceny"
       echo "  -little            endian little (Standard-C target)"
       echo "  -sparc             compile for SPARC target"
       echo "  -petit             compile for Standard-C target"
       echo "  -verbose           be verbose"
       echo "See also http://www.ccs.neu.edu/home/lth/larceny/developing.html"
       exit 1
       ;;
  esac
  shift
done

if [ $TARGET = "standard-C" ]; then
  if [ $ENDIAN = "big" ]; then
    TARGET="C-be"
  else
    TARGET="C-el"
  fi
fi

cat > $TMPFILE <<END
(load "Util/nbuild-param-${TARGET}.sch")
(define nbuild-parameter 
    (make-nbuild-parameter 
    "$DIR/" $INTERP $VERBOSE "$L_HOSTDIR" "$L_HOSTNAME"))

(display "Twobit/Larceny development environment running under ")
(display (nbuild-parameter 'host-system))
(display ".")
(newline)
(newline)
(display "Loading ")
(display (nbuild-parameter 'host-system))
(display " compatibility package.")
(newline)
(load (string-append (nbuild-parameter 'compatibility) "compat.sch"))
(compat:initialize)

;;;

(load (string-append (nbuild-parameter 'util) "nbuild.sch"))
END

# Make the scheme header file; it may have changed.

( cd Rts; make Build/schdefs.h ; exit $? ) || exit $?

# Run the development environment.

if [ "$EXECUTABLE" = "" ]; then
  case $L_HOST in
    chez) EXECUTABLE="scheme" ;;
    larceny) EXECUTABLE="larceny" ;;
    Larceny) EXECUTABLE="Larceny" ;;
  esac
fi

case $L_HOST in
  chez)    $EXECUTABLE $ARGS $TMPFILE ;;
  larceny) $EXECUTABLE $ARGS -args $TMPFILE ;;
  Larceny) $EXECUTABLE $ARGS -args $TMPFILE ;;
  *)       echo "Internal error in build script."; exit 1 ;;
esac

rm $TMPFILE
exit 0

# eof
