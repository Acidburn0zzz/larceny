; -*- Scheme -*-
;
; Millicode table offsets.
;
; $Id: millicode.cfg,v 1.2 1992/03/31 12:30:28 lth Exp lth $

(define-files "Sys/millicode.h" "Sparc/millicode.s.h" "Sparc/millicode.sch.h")

(define-action c (lambda (x) (inexact->exact (* x 2))))
(define-action assembly (lambda (x) (inexact->exact (* x 8))))
(define-action scheme (lambda (x) (* x 8)))

; Watch this!

(define-const last-millicode 66 "LAST_MILLICODE" #f #f)

(define-const millicode-table-size (+ last-millicode 1)
              "MILLICODE_TABLE_SIZE" #f #f)

(define-const m-stkoflow1 0 "M_STKOFLOW" "M_STKOFLOW" "$m.stkoflow")
(define-const m-stkuflow 1.5 "M_STKUFLOW" "M_STKUFLOW" #f)
(define-const m-alloc 2 "M_ALLOC" "M_ALLOC" "$m.alloc")
(define-const m-alloci 3 "M_ALLOCI" "M_ALLOCI" "$m.alloci")
(define-const m-setcar 4 "M_SETCAR" "M_SETCAR" "$m.setcar")
(define-const m-setcdr 5 "M_SETCDR" "M_SETCDR" "$m.setcdr")
(define-const m-vectorset 6 "M_VECTORSET" "M_VECTORSET" "$m.vector-set")
(define-const m-gcstart 7 "M_GCSTART" "M_GCSTART" "$m.gcstart")
(define-const m-save-context 8 
              "M_SAVE_CONTEXT" "M_SAVE_CONTEXT" "$m.save-context")
(define-const m-restore-context 9
              "M_RESTORE_CONTEXT" "M_RESTORE_CONTEXT" "$m.restore-context")
(define-const m-type-exception 10
              "M_TYPE_EXCEPTION" "M_TYPE_EXCEPTION" "$m.type-exception")
(define-const m-zerop 11 "M_ZEROP" "M_ZEROP" "$m.zerop")
(define-const m-add 12 "M_ADD" "M_ADD" "$m.add")
(define-const m-sub 13 "M_SUB" "M_SUB" "$m.subtract")
(define-const m-mul 14 "M_MUL" "M_MUL" "$m.multiply")
(define-const m-quot 15 "M_QUOT" "M_QUOT" "$m.quotient")
(define-const m-rem 16 "M_REM" "M_REM" "$m.remainder")
(define-const m-div 17 "M_DIV" "M_DIV" "$m.divide")
(define-const m-neg 18 "M_NEG" "M_NEG" "$m.negate")
(define-const m-capture 19 "M_CAPTURE" "M_CAPTURE" "$m.capture-continuation")
(define-const m-restore 20 "M_RESTORE" "M_RESTORE" "$m.restore-continuation")
(define-const m-timer-exception 21
              "M_TIMER_EXCEPTION" "M_TIMER_EXCEPTION" "$m.timer-exception")
(define-const m-proc-exception 22
              "M_PROC_EXCEPTION" "M_PROC_EXCEPTION" "$m.proc-exception")
(define-const m-arg-exception 23
              "M_ARG_EXCEPTION" "M_ARG_EXCEPTION" "$m.arg-exception")
(define-const m-varargs 24 "M_VARARGS" "M_VARARGS" "$m.varargs")
(define-const m-apply 25 "M_APPLY" "M_APPLY" "$m.apply")
(define-const m-numeq 26 "M_NUMEQ" "M_NUMEQ" "$m.numeq")
(define-const m-numlt 27 "M_NUMLT" "M_NUMLT" "$m.numlt")
(define-const m-numle 28 "M_NUMLE" "M_NUMLE" "$m.numle")
(define-const m-numgt 29 "M_NUMGT" "M_NUMGT" "$m.numgt")
(define-const m-numge 30 "M_NUMGE" "M_NUMGE" "$m.numge")
(define-const m-garbage-collect 31
              "M_GARBAGE_COLLECT" "M_GARBAGE_COLLECT" "$m.garbage-collect")
(define-const m-open-file 32 "M_OPEN_FILE" "M_OPEN_FILE" "$m.open-file")
(define-const m-close-file 33 "M_CLOSE_FILE" "M_CLOSE_FILE" "$m.close-file")
(define-const m-create-file 34
              "M_CREATE_FILE" "M_CREATE_FILE" "$m.create-file")
(define-const m-unlink-file 35
              "M_UNLINK_FILE" "M_UNLINK_FILE" "$m.unlink-file")
(define-const m-read-file 36 "M_READ_FILE" "M_READ_FILE" "$m.read-file")
(define-const m-write-file 37 "M_WRITE_FILE" "M_WRITE_FILE" "$m.write-file")
(define-const m-mod 38 "M_MOD" "M_MOD" "$m.modulo")
(define-const m-complexp 39 "M_COMPLEXP" "M_COMPLEXP" "$m.complexp")
(define-const m-realp 40 "M_REALP" "M_REALP" "$m.realp")
(define-const m-rationalp 41 "M_RATIONALP" "M_RATIONALP" "$m.rationalp")
(define-const m-integerp 42 "M_INTEGERP" "M_INTEGERP" "$m.integerp")
(define-const m-exactp 43 "M_EXACTP" "M_EXACTP" "$m.exactp")
(define-const m-inexactp 44 "M_INEXACTP" "M_INEXACTP" "$m.inexactp")
(define-const m-exact2inexact 45
              "M_EXACT2INEXACT" "M_EXACT2INEXACT" "$m.exact->inexact")
(define-const m-inexact2exact 46
              "M_INEXACT2EXACT" "M_INEXACT2EXACT" "$m.inexact->exact")
(define-const m-make-rectangular 47
              "M_MAKE_RECTANGULAR" "M_MAKE_RECTANGULAR" "$m.make-rectangular")
(define-const m-real-part 48 "M_REAL_PART" "M_REAL_PART" "$m.real-part")
(define-const m-imag-part 49 "M_IMAG_PART" "M_IMAG_PART" "$m.imag-part")
(define-const m-sqrt 50 "M_SQRT" "M_SQRT" "$m.sqrt")
(define-const m-round 51 "M_ROUND" "M_ROUND" "$m.round")
(define-const m-truncate 52 "M_TRUNCATE" "M_TRUNCATE" "$m.truncate")
(define-const m-not-supported 53
              "M_NOT_SUPPORTED" "M_NOT_SUPPORTED" "$m.not-supported")
(define-const m-debug 54 "M_DEBUG" "M_DEBUG" "$m.debug")
(define-const m-reset 55 "M_RESET" "M_RESET" "$m.reset")
(define-const m-exit 56 "M_EXIT" "M_EXIT" "$m.exit")
(define-const m-break 57 "M_BREAK" "M_BREAK" "$m.break")
(define-const m-typetag 58 "M_TYPETAG" "M_TYPETAG" "$m.typetag")
(define-const m-typetagset 59 "M_TYPETAGSET" "M_TYPETAGSET" "$m.typetag-set")
(define-const m-eqv 60 "M_EQV" "M_EQV" "$m.eqv")
(define-const m-getrusage 61 "M_GETRUSAGE" "M_GETRUSAGE" "$m.getrusage")
(define-const m-restore-frame 62
              "M_RESTORE_FRAME" "M_RESTORE_FRAME" "$m.restore-frame")
(define-const m-arith-exception 63
              "M_ARITH_EXCEPTION" "M_ARITH_EXCEPTION" "$m.arith-exception")
(define-const m-undef-exception 64
              "M_UNDEF_EXCEPTION" "M_UNDEF_EXCEPTION" "$m.undef-exception")
(define-const m-singlestep 65 "M_SINGLESTEP" "M_SINGLESTEP" "$m.singlestep")
(define-const m-generic-exception 66 "M_GENERIC_EXCEPTION" "M_GENERIC_EXCEPTION" "$m.generic-exception")

; eof

